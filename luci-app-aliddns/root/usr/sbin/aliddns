#!/bin/sh

aliddns_ak=`uci get aliddns.base.app_key 2>/dev/null`
aliddns_sk=`uci get aliddns.base.app_secret 2>/dev/null`
local_record_id=`uci get aliddns.base.record_id 2>/dev/null`
time=`uci get aliddns.base.time 2>/dev/null`
aliddns_enable=`uci get aliddns.base.enable`
aliddns_domain=`uci get aliddns.base.domain 2>/dev/null`
aliddns_name=`uci get aliddns.base.host 2>/dev/null`
interface=`uci get aliddns.base.interface 2>/dev/null`
timestamp=`date -u "+%Y-%m-%dT%H%%3A%M%%3A%SZ"`
local_ip=$(ifconfig $interface 2> /dev/null | grep 'inet addr' | awk '{print $2}' | cut -d: -f2  2>/dev/null)
log_file=/var/log/aliddns.log

. /usr/share/libubox/jshn.sh

touch $log_file

echolog() {
	local d=$(date '+%Y-%m-%d %H:%M:%S')
	echo -e "[$d]  $*" >> $log_file
}

check_aliddns() {
    json_load $query_result
    json_select "DomainRecords" >/dev/null 2>&1
    json_select "Record" >/dev/null 2>&1
    json_select 1 >/dev/null 2>&1
    json_get_var ddns_ip "Value"
    if [ "${local_ip}" == "${ddns_ip}" ]; then
        echolog "IP 无变更 $local_ip"
    else
        echolog "IP 已变更 ${ddns_ip} -> ${local_ip}"
    fi
}

urlencode() {
    local length="${#1}"
    i=0
    out=""
    for i in $(awk "BEGIN { for ( i=0; i<$length; i++ ) { print i; } }")
    do
        local c="${1:$i:1}"
        case $c in
            [a-zA-Z0-9._-]) out="$out$c" ;;
            *) out="$out`printf '%%%02X' "'$c"`" ;;
        esac
        i=$(($i + 1))
    done
    echo -n $out
}

send_request() {
    local args="AccessKeyId=$aliddns_ak&Action=$1&Format=json&$2&Version=2015-01-09"
    local hash=$(urlencode $(echo -n "GET&%2F&$(urlencode $args)" | openssl dgst -sha1 -hmac "$aliddns_sk&" -binary | openssl base64))
    wget -qO- "http://alidns.aliyuncs.com/?$args&Signature=$hash" 2> /dev/null
}

get_recordid() {
    grep -Eo '"RecordId":"[0-9]+"' | cut -d':' -f2 | tr -d '"'
}

query_recordid() {
    send_request "DescribeSubDomainRecords" "SignatureMethod=HMAC-SHA1&SignatureNonce=$timestamp&SignatureVersion=1.0&SubDomain=$(urlencode "$aliddns_name").$aliddns_domain&Timestamp=$timestamp"
}

update_record() {
    send_request "UpdateDomainRecord" "RR=$(urlencode "$aliddns_name")&RecordId=$1&SignatureMethod=HMAC-SHA1&SignatureNonce=$timestamp&SignatureVersion=1.0&Timestamp=$timestamp&Type=A&Value=$local_ip"
}

add_record() {
    send_request "AddDomainRecord&DomainName=$aliddns_domain" "RR=$(urlencode "$aliddns_name")&SignatureMethod=HMAC-SHA1&SignatureNonce=$timestamp&SignatureVersion=1.0&Timestamp=$timestamp&Type=A&Value=$local_ip"
}

go_record() {
    aliddns_record_id=`echo $query_result | get_recordid`
    if [ -n "$aliddns_record_id" ]; then
        if [ "$local_record_id" == "$aliddns_record_id" ]; then
            if [ "${local_ip}" != "${ddns_ip}" ]; then
                update_record $aliddns_record_id
                echolog "更新 DDNS 记录 $aliddns_name.$aliddns_domain -> ${local_ip}"
            fi
        else
            uci set aliddns.base.record_id=$aliddns_record_id
            uci commit
            update_record $aliddns_record_id
            echolog "更新 DDNS 记录 $aliddns_name.$aliddns_domain -> ${local_ip}"
        fi
    else
        aliddns_record_id=`add_record | get_recordid`
        if [ -z "$aliddns_record_id" ]; then
            echolog "新增 DDNS 记录错误"
        else
            uci set aliddns.base.record_id=$aliddns_record_id
            uci commit
            update_record $aliddns_record_id
            echolog "新增 DDNS 记录 $aliddns_name.$aliddns_domain -> ${local_ip}"
        fi
    fi
}

add_aliddns_cron(){
    wirtecron=$(cat /etc/crontabs/root | grep "/usr/sbin/aliddns")
    if [ -z "$wirtecron" ]; then
        sed -i '/aliddns/d' /etc/crontabs/root >/dev/null 2>&1
        echo "*/$time * * * * /usr/sbin/aliddns" >> /etc/crontabs/root 
    fi
}

clean_log(){
    logrow=$(grep -c "" $log_file)
    if [ $logrow -ge 100 ]; then
        cat /dev/null > $log_file
        echolog "日志超出100条限制, 已清空"
    fi
}

stop_aliddns(){
    sed -i '/aliddns/d' /etc/crontabs/root >/dev/null 2>&1
    uci set aliddns.base.record_id=0
    uci commit
}

if [ "$aliddns_enable" != "1" ]; then
    stop_aliddns
    clean_log
else
    if [ -n "$local_ip" ]; then
        clean_log
        query_result=$(query_recordid)
        check_aliddns
        go_record
    fi
    add_aliddns_cron
fi